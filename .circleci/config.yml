version: 2
jobs:
  x11:
    docker:
      - image: mmatyas/pegasus-qt_x11-bionic
    environment:
      - QT_VERSION: qt5152
      - QT_TARGET: x11-static
      - BUILDOPTS:
          USE_SDL_GAMEPAD=1
          USE_SDL_POWER=1
          INSTALL_BINDIR=/usr/bin
          INSTALL_ICONDIR=/usr/share/icons/hicolor
          INSTALL_DESKTOPDIR=/usr/share/applications
          INSTALL_APPSTREAMDIR=/usr/share/metainfo
          INSTALL_DOCDIR=/usr/share/doc/pegasus-frontend
      - INSTALL_BINDIR: /usr/bin/
      - GEMDIR: /home/build/.gem/ruby/2.5.0/bin/
    steps:
      - run: gem install --user-install -N fpm -v 1.10.2
      - checkout
      - run: .circleci/prepare.sh
      - run: .circleci/build.sh
      - run: .circleci/objdump_linux.sh ''
      # Deploy
      - run: .circleci/zip_linux.sh
      - run: cd dist && PATH="$PATH:${GEMDIR}" ../.travis/script__create_deb.sh
      - run: .circleci/release.sh

  android:
    docker:
      - image: mmatyas/pegasus-qt-android
    environment:
      - QT_VERSION: qt5152
      - QT_TARGET: android
      - ANDROID_NDK_ROOT: /opt/android-ndk
      - BUILDOPTS: ANDROID_ABIS=armeabi-v7a FORCE_QT_PNG=1
    steps:
      - checkout
      - run: .circleci/prepare.sh
      - run: .circleci/build.sh
      - run: curl -LO https://github.com/mmatyas/pegasus-frontend/releases/download/alpha1/aks.enc
      - run: openssl aes-256-cbc -k "${AKS_ENC_KEY}" -in aks.enc -out aks -d
      - run: /opt/${QT_VERSION}_${QT_TARGET}/bin/androiddeployqt
          --input src/app/android-pegasus-fe-deployment-settings.json
          --output ${PWD}/installdir
          --android-platform android-30
          --gradle
          --sign ./aks "${AKS_ALIAS}"
          --storepass "${AKS_STOREPASS}"
          --keypass "${AKS_KEYPASS}"
      # Deploy
      - run: cp
          installdir/build/outputs/apk/release/installdir-release-signed.apk
          dist/pegasus-fe_$(git describe --always)_android.apk
      - run: .circleci/release.sh

  mingw:
    docker:
      - image: mmatyas/pegasus-qt-mingw
    environment:
      - QT_VERSION: qt5152
      - QT_TARGET: win32-mingw-static
      - BUILDOPTS:
          USE_SDL_GAMEPAD=1
          USE_SDL_POWER=1
          SDL_LIBS='-L/opt/SDL2-2.0.10/i686-w64-mingw32/lib/ -lSDL2 -Wl,--no-undefined -lm -ldinput8 -ldxguid -ldxerr8 -lsetupapi'
          SDL_INCLUDES=/opt/SDL2-2.0.10/i686-w64-mingw32/include/SDL2/
    steps:
      - checkout
      - run: .circleci/prepare.sh
      - run: curl -L "https://www.libsdl.org/release/SDL2-devel-2.0.10-mingw.tar.gz" | tar xzf - -C /opt/
      - run: .circleci/build.sh
      - run: i686-w64-mingw32-objdump -p installdir/home/build/project/src/app/C:/pegasus-frontend/pegasus-fe.exe | grep 'DLL Name' | sort
      # Deploy
      - run: zip -j dist/pegasus-fe_$(git describe --always)_win-mingw-static.zip
          installdir/home/build/project/src/app/C:/pegasus-frontend/pegasus-fe.exe
          README.md
          LICENSE.md
      - run: .circleci/release.sh

  buster-pi1:
    docker:
      - image: mmatyas/pegasus-qt-buster
    environment:
      - QT_VERSION: qt5152
      - QT_TARGET: rpi1-static
      - BUILDOPTS: USE_SDL_GAMEPAD=1 USE_SDL_POWER=1
    steps:
      - checkout
      - run: .circleci/prepare.sh
      - run: .circleci/build.sh
      - run: .circleci/objdump_linux.sh arm-linux-gnueabihf-
      # Deploy
      - run: .circleci/zip_linux.sh
      - run: .circleci/release.sh

  buster-pi2:
    docker:
      - image: mmatyas/pegasus-qt-buster
    environment:
      - QT_VERSION: qt5152
      - QT_TARGET: rpi2-static
      - BUILDOPTS: USE_SDL_GAMEPAD=1 USE_SDL_POWER=1
    steps:
      - checkout
      - run: .circleci/prepare.sh
      - run: .circleci/build.sh
      - run: .circleci/objdump_linux.sh arm-linux-gnueabihf-
      # Deploy
      - run: .circleci/zip_linux.sh
      - run: .circleci/release.sh

  buster-pi3:
    docker:
      - image: mmatyas/pegasus-qt-buster
    environment:
      - QT_VERSION: qt5152
      - QT_TARGET: rpi3-static
      - BUILDOPTS: USE_SDL_GAMEPAD=1 USE_SDL_POWER=1
    steps:
      - checkout
      - run: .circleci/prepare.sh
      - run: .circleci/build.sh
      - run: .circleci/objdump_linux.sh arm-linux-gnueabihf-
      # Deploy
      - run: .circleci/zip_linux.sh
      - run: .circleci/release.sh

  buster-pi4:
    docker:
      - image: mmatyas/pegasus-qt-buster
    environment:
      - QT_VERSION: qt5152
      - QT_TARGET: rpi4-static
      - BUILDOPTS: QMAKE_LIBS_LIBDL=-ldl
    steps:
      - checkout
      - run: git apply ./etc/rpi4/kms_launch_fix.diff
      - run: .circleci/prepare.sh
      - run: .circleci/build.sh
      - run: .circleci/objdump_linux.sh arm-linux-gnueabihf-
      # Deploy
      - run: .circleci/zip_linux.sh
      - run: .circleci/release.sh

  odroid-c1:
    docker:
      - image: mmatyas/pegasus-qt_odroid-c1
    environment:
      - QT_VERSION: qt5152
      - QT_TARGET: odroid-c1-static
    steps:
      - checkout
      - run: .circleci/prepare.sh
      - run: .circleci/build.sh
      - run: patchelf --replace-needed /opt/odroid-c1_bionic/usr/lib/arm-linux-gnueabihf/libEGL.so libEGL.so installdir/opt/pegasus-frontend/pegasus-fe
      - run: .circleci/objdump_linux.sh arm-linux-gnueabihf-
      # Deploy
      - run: .circleci/zip_linux.sh
      - run: .circleci/release.sh

  odroid-c2:
    docker:
      - image: mmatyas/pegasus-qt_odroid-c2
    environment:
      - QT_VERSION: qt5152
      - QT_TARGET: odroid-c2-static
    steps:
      - checkout
      - run: .circleci/prepare.sh
      - run: .circleci/build.sh
      - run: patchelf --replace-needed /opt/odroid-c2_bionic/usr/lib/aarch64-linux-gnu/libEGL.so libEGL.so installdir/opt/pegasus-frontend/pegasus-fe
      - run: .circleci/objdump_linux.sh aarch64-linux-gnu-
      # Deploy
      - run: .circleci/zip_linux.sh
      - run: .circleci/release.sh

  odroid-xu3:
    docker:
      - image: mmatyas/pegasus-qt_odroid-xu3
    environment:
      - QT_VERSION: qt5152
      - QT_TARGET: odroid-xu3-static
    steps:
      - checkout
      - run: .circleci/prepare.sh
      - run: .circleci/build.sh
      - run: patchelf --replace-needed /opt/odroid-5422s_bionic/usr/lib/arm-linux-gnueabihf/libEGL.so libEGL.so installdir/opt/pegasus-frontend/pegasus-fe
      - run: .circleci/objdump_linux.sh arm-linux-gnueabihf-
      # Deploy
      - run: .circleci/zip_linux.sh
      - run: .circleci/release.sh

  release:
    docker:
      - image: mmatyas/pegasus-qt_x11-bionic
    steps:
      - checkout
      - run: .circleci/release_github.sh
      - run: .circleci/release_bintray.sh


workflows:
  version: 2
  all:
    jobs:
      - x11
      - android
      - mingw
      - buster-pi1
      - buster-pi2
      - buster-pi3
      - buster-pi4
      - odroid-c1
      - odroid-c2
      - odroid-xu3
      - release:
          requires:
            - x11
            - android
            - mingw
            - buster-pi1
            - buster-pi2
            - buster-pi3
            - buster-pi4
            - odroid-c1
            - odroid-c2
            - odroid-xu3
